{
    parserClass="me.dmitvitalii.blueprint.lang.BlueprintParser"
    extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

    psiClassPrefix="Blueprint"
    psiImplClassSuffix="Impl"
    psiPackage="me.dmitvitalii.blueprint.lang.psi"
    psiImplPackage="me.dmitvitalii.blueprint.lang.psi.impl"

    elementTypeHolderClass="me.dmitvitalii.blueprint.lang.psi.BlueprintType"
    elementTypeClass="me.dmitvitalii.blueprint.lang.psi.BlueprintElementType"
    tokenTypeClass="me.dmitvitalii.blueprint.lang.psi.BlueprintTokenType"


    tokens = [
        LEFT_BRACE          = '{'
        RIGHT_BRACE         = '}'
        LEFT_BRACKET        = '['
        RIGHT_BRACKET       = ']'
        COMMA               = ','
        ASSIGN              = '='
        COLON               = ':'
        PLUS_ASSIGN         = '+='
        PLUS                = '+'
        MINUS               = '-'
        IDENTIFIER          = 'regexp:[a-zA-Z_][a-zA-Z0-9_]*'
        LINE_COMMENT        = 'regexp://.*'
        MULTILINE_COMMENT   = 'regexp:/\*([^*]|\*+[^*/])*(\*+/)?'
        STRING              = 'regexp:"[^"]*"'
        NUMBER              = 'regexp:-?(0|[1-9]\d*)(\.\d+)?([eE][+-]?\d*)?'
        WS                  = 'regexp:[ \t\n\f\r]+'
    ]
}

File ::= (variable | module) *

variable ::=  IDENTIFIER  assignment  value
// TODO: module != map: android blueprint system will stop a build process if it doesn't recognize a module.
// TODO: But all maps actually can be added with every name we want.
module ::=  IDENTIFIER  map

assignment ::= ASSIGN | PLUS_ASSIGN

struct ::= map | list

// We only have lists of strings
list ::= LEFT_BRACKET listItems? RIGHT_BRACKET
// Unlike lists, we can have a map of any type
map ::= LEFT_BRACE mapItems? RIGHT_BRACE

mapItems ::=  mapItem  COMMA  mapItems  |  mapItem  COMMA?
mapItem ::=  IDENTIFIER  COLON  value

listItems ::=  STRING  COMMA  listItems  |  STRING  COMMA?

boolean ::= 'true' | 'false'

value ::= stringItem | NUMBER | boolean | struct
stringItem ::=  STRING  PLUS  stringItem  | STRING